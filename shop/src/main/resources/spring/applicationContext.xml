<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">
	<!-- 包扫描 -->
	<context:component-scan base-package="vip.hht"/>
	
	<!-- 读取配置数据库文件 -->
	<context:property-placeholder location="classpath:mybatis/db.properties"/>
	
	<!-- 配置数据源 -->
<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="driverClass" value="${jdbc.driver}"/>
	<property name="jdbcUrl" value="${jdbc.url}"/>
	<property name="user"  value="${jdbc.username}"/>
	<property name="password"  value="${jdbc.password}"/>
</bean>

	
	
	<!--  配置mybaits工厂   -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"></property>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!--配置mapper工厂 mapper接口开发  -->
	<bean id="mapper" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="vip.hht.mapper"/>
	</bean>
	
	
	<!-- 配置事务 -->
	
	<!-- 配置事务核心管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 依赖连接池 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 配置通知  spring已经定义好了通知不需要自己写-->
	<tx:advice transaction-manager="transactionManager" id="txAdvice">
	<tx:attributes>
	<!-- 配置事务的属性 
		isolation:事务的隔离级别
		propagation:事务的传播行为
		read-only:是否只读
	-->
		<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
		<tx:method name="add*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="del*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="rem*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="edit*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="false"/>
		<tx:method name="select*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="true"/>
		<tx:method name="select*" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="true"/>
		<tx:method name="get" isolation="REPEATABLE_READ" propagation="REQUIRED"  read-only="true"/>
	</tx:attributes>
	</tx:advice>
	
	<!-- 配置将通知织入到切点 -->
	<aop:config >
		<!-- 配置切点 -->
		<aop:pointcut expression="execution(* vip.hht.serviceImpl..*ServiceImpl.*(..))" id="pc"/>
		<!-- 织入 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>


</beans>