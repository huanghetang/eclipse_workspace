<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd ">
<!-- 开启注解模式 -->
<context:component-scan base-package="vip.hht" />
<!-- 加载数据库配置文件 -->
<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置数据源 -->
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

<bean name="userDaoImpl" class="vip.hht.dao.UserDaoImpl">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<bean name="userService" class="vip.hht.service.UserServiceImpl">
	<property name="dao" ref="userDaoImpl"></property>
	<!-- <property name="tt" ref="transactionTemplate"></property> -->
</bean>

<!-- 事务核心管理器,封装了所有事务,依赖连接池-->
<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<!-- 使用编码式 操作事务需要事务模板对象 -->
<bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
<property name="transactionManager" ref="transactionManager"></property>
</bean>



<!--3. 开启aop事务注解  事务管理的究极模式,只需要在service层中直接使用
		 @Transactional(isolation=Isolation.REPEATABLE_READ,propagation=Propagation.REQUIRED,readOnly=false)
		 就可以直接给该方法加入了该属性的事务-->
<tx:annotation-driven/>

</beans>